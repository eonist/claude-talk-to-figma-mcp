{
  "url": "https://api.github.com/repos/eonist/claude-talk-to-figma-mcp/issues/comments/2859545793",
  "html_url": "https://github.com/eonist/claude-talk-to-figma-mcp/issues/88#issuecomment-2859545793",
  "issue_url": "https://api.github.com/repos/eonist/claude-talk-to-figma-mcp/issues/88",
  "id": 2859545793,
  "node_id": "IC_kwDOOjKCnc6qcTTB",
  "user": {
    "login": "eonist",
    "id": 11816788,
    "node_id": "MDQ6VXNlcjExODE2Nzg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/11816788?u=73d5dd42df7d9ef21687c7dc1cbf8588135fea9d&v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eonist",
    "html_url": "https://github.com/eonist",
    "followers_url": "https://api.github.com/users/eonist/followers",
    "following_url": "https://api.github.com/users/eonist/following{/other_user}",
    "gists_url": "https://api.github.com/users/eonist/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eonist/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eonist/subscriptions",
    "organizations_url": "https://api.github.com/users/eonist/orgs",
    "repos_url": "https://api.github.com/users/eonist/repos",
    "events_url": "https://api.github.com/users/eonist/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eonist/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "created_at": "2025-05-07T17:40:20Z",
  "updated_at": "2025-05-07T17:40:20Z",
  "author_association": "OWNER",
  "body": "Okay, I've updated the logo icon source URLs in the specifications.\n\n## Figma Plugin Design Specifications: Conduit\n\n**Window Header Title:** Conduit\n\n### I. General Design Principles & Setup\n\n*   **Plugin Window Size**: The plugin window should have a fixed size of **350px (width) by 500px (height)**.\n*   **Figma UI Consistency**: Aim to match the plugin's visual style (colors, typography, iconography) with Figma's native interface for a seamless user experience.\n*   **Auto Layout**: Utilize Figma's Auto Layout feature extensively for all components and views to ensure responsive behavior, consistent spacing, and ease of maintenance within the defined plugin dimensions.\n*   **Components & Variants**: Create reusable components for recurring UI elements like buttons, input fields, and toggles. Use variants to manage different states (e.g., selected, disabled, connected).\n*   **Styles**: Define and use Text Styles and Color Styles for all text and color applications. This ensures consistency and simplifies future updates.\n*   **Naming Conventions**: Employ clear and consistent naming for all layers, components, and styles.\n*   **Accessibility**: Consider color contrast and font legibility to ensure the plugin is usable by a wide range of users.\n\n### II. Main Plugin Layout\n\n*   **Overall Structure**: The plugin interface will consist of components arranged in a single vertical stack within the 350x500px window.\n*   **Spacing**: Maintain a consistent vertical spacing of 12px between each direct child component in the main stack.\n*   **Component Width**: Components set to \"100% width\" should fill the 350px plugin width, respecting any internal padding.\n\n### III. Component Specifications\n\n**1. Header Component**\n    *   **Layout**: Use Auto Layout (vertical direction, spacing as needed, e.g., 4px or 8px). Align contents to the left.\n    *   **Logo Icon**:\n        *   Size: 64x64px.\n        *   Source:\n            *   Light Mode: `https://github.com/user-attachments/assets/64ae1906-39ff-4407-803c-9c9b36db14f6`[1]\n            *   Dark Mode: `https://github.com/user-attachments/assets/ec6e41f4-9eaa-461d-b01f-20b6a687d1b4`[2]\n        *   The plugin should dynamically select the appropriate logo based on the active Figma theme.\n        *   Alignment: Left-aligned within the Header Component.\n    *   **Title Text**:\n        *   Content: \"Conduit\"\n        *   Style: Define a Text Style (e.g., \"Plugin Title\" - suggest H1 or equivalent, e.g., Inter Bold, 16pt).\n    *   **Subtitle Text**:\n        *   Content: \"Design at the speed of thought\"\n        *   Style: Define a Text Style (e.g., \"Plugin Subtitle\" - suggest Body Regular, e.g., Inter Regular, 12pt, slightly lighter color than title).\n\n**2. Tab-Toggle Component**\n    *   **Layout**: Full width of the plugin (set to \"Fill container\" in Auto Layout, i.e., 350px).\n    *   **Container**:\n        *   A single rounded capsule shape acting as the background for the two tab buttons.\n        *   Padding: Define internal padding for this container (e.g., 4px).\n        *   Corner Radius: Define (e.g., 8px or such that it forms a continuous capsule around the buttons).\n    *   **Tab Buttons (Grouped Horizontally)**:\n        *   Options: \"Connection\", \"About\".\n        *   Arrangement: Grouped horizontally using Auto Layout, with defined spacing between them (e.g., 4px). This group should be centered horizontally within the Tab-Toggle container.\n        *   Shape: Each button is a rounded capsule. Define corner radius (e.g., 6px, or to match the outer container's capsule feel).\n        *   Text: Centered within each button. Define padding around text (e.g., 8px horizontal, 4px vertical). Define a Text Style (e.g., \"Tab Button Text\").\n        *   **States**:\n            *   **Selected Tab**:\n                *   Background Color: Define a specific shade (e.g., Figma's selected blue or a prominent accent color).\n                *   Text Color: Define (e.g., white or a contrasting color to the selected background).\n            *   **Unselected Tab**:\n                *   Background Color: Define a specific shade (e.g., a lighter/neutral shade or transparent to show the container background).\n                *   Text Color: Define (e.g., a standard text color).\n            *   **Hover State**: Define subtle changes for background/text on hover for both selected and unselected tabs.\n\n**3. Connect View**\n    *   This view is visible by default when the \"Connection\" tab is selected.\n    *   **Layout**: Vertical stack, apply Auto Layout with 12px spacing between its child components (Websocket-component, Toggle-component, Status-component).\n\n    *   **3.1. Websocket Component**\n        *   Layout: Full width (350px). Use Auto Layout to arrange its internal elements.\n        *   **Title Text**:\n            *   Content: \"Websocket-port:\"\n            *   Alignment: Top-left.\n            *   Style: Define Text Style (e.g., \"Label Text\" - Inter Medium, 11pt).\n        *   **Input Row (Input Field + Button)**:\n            *   Layout: Horizontal Auto Layout, align items vertically (e.g., center). Spacing between input and button (e.g., 8px).\n            *   **Single-Lined Input Textfield**:\n                *   Alignment: Left-aligned, positioned below the Websocket Component title.\n                *   Default Value: \"3055\".\n                *   Style: Define dimensions (Height, e.g., 32px; Width should fill available space minus button). Define padding, text style for input, border style (e.g., 1px solid, color), background color.\n            *   **Connect/Disconnect Button**:\n                *   Alignment: Right of the input textfield.\n                *   Text: Dynamically changes based on connection state: \"Connect\" or \"Disconnect\".\n                *   Style: Define button style (padding, corner radius, background colors for states, text style). Consider primary and secondary button styles.\n\n    *   **3.2. Toggle Component**\n        *   Layout: Full width (350px). Horizontal Auto Layout to arrange toggle and description text. Align items vertically (e.g., center). Spacing (e.g., 8px).\n        *   **Toggle Switch**:\n            *   Alignment: Top-left within this component.\n            *   State: Checked/Unchecked. Default: Checked.\n            *   Style: Use a standard toggle switch visual. Define colors for on/off states.\n        *   **Description Text**:\n            *   Content: \"Auto connect to server\"\n            *   Alignment: To the right of the toggle switch.\n            *   Style: Define Text Style (e.g., \"Body Text\" - Inter Regular, 12pt).\n\n    *   **3.3. Status Component**\n        *   Layout: Full width (350px).\n        *   **Multiline Text Field (Display Only)**:\n            *   Alignment: Left-aligned.\n            *   Content: \"Connected to server on port $$port_value) in channel: $$channel_value)\". `$$port_value)` and `$$channel_value)` are dynamic variables.\n            *   Style: Define Text Style. Define padding within the component (e.g., 8px).\n        *   **Visual State Indicator (Border and Fill)**:\n            *   **Connected State**:\n                *   Fill Color: Specific green (e.g., `#2ECC71`).\n                *   Border Color: Darker shade of the fill green (e.g., `#27AE60`).\n                *   Text Color: Ensure good contrast with green background (e.g., white or dark gray).\n            *   **Disconnected State**:\n                *   Fill Color: Specific red (e.g., `#E74C3C`).\n                *   Border Color: Darker shade of the fill red (e.g., `#C0392B`).\n                *   Text Color: Ensure good contrast with red background.\n            *   Border: Define border thickness (e.g., 1px) and corner radius (e.g., 4px).\n\n**4. About View**\n    *   This view is hidden by default and shown when the \"About\" tab is selected.\n    *   **Layout**: Vertical stack, apply Auto Layout with appropriate spacing (e.g., 8px or 12px).\n\n    *   **4.1. Title Text**:\n        *   Content: \"About Conduit\"\n        *   Style: Define Text Style (same as Header Component Title or a dedicated \"View Title\" style).\n\n    *   **4.2. Multiline Description Text**:\n        *   Content:\n            ```\n            This plugin allows you to use any agentic AI app that supports MCP. Enabling AI assisted design operations.\n            Based on work by [Sonny](<GitHub_User_URL_Sonny>) and [Arinspunk](<GitHub_User_URL_Arinspunk>).\n\n            Version: \\(version_value)\n\n            How to use:\n            1. Start server in terminal: \"bun socket\". The plugin will auto-connect if this is enabled.\n            2. Press the \"copy channel\" button in the plugin.\n            3. Make sure you add the mcp config to your AI agent. Paste this in the mcp-config file: \"mcp{conduit,autoconnect, etc}\"\n            4. Talk to figma on channel: paste your channel id. And then begin chatting with your design.\n            ```\n        *   Style: Define a base Text Style (e.g., \"Body Text\").\n        *   Links: \"Sonny\" and \"Arinspunk\" should be hyperlinks to their GitHub user accounts. Style links distinctively (e.g., standard blue, underline on hover, or a color that fits the plugin theme but is recognizable as a link).\n        *   Formatting:\n            *   Use paragraph spacing or explicit line breaks as indicated by \"newline\" in the original (represented by blank lines above).\n            *   The \"How to use\" section should be formatted as a numbered list.\n\n### IV. Usability & Completeness Notes\n*   Ensure the plugin is fully functional and does not crash or have obvious bugs.\n*   Use clear, user-friendly language. Avoid developer error messages for end-users.\n*   Provide accurate metadata (description, screenshots) for the plugin store.\n*   Optimize for performance to avoid negatively impacting Figma.\n*   If offline functionality is limited, notify the user appropriately.\n\nSources\n[1] 64ae1906-39ff-4407-803c-9c9b36db14f6 https://github.com/user-attachments/assets/64ae1906-39ff-4407-803c-9c9b36db14f6\n[2] ec6e41f4-9eaa-461d-b01f-20b6a687d1b4 https://github.com/user-attachments/assets/ec6e41f4-9eaa-461d-b01f-20b6a687d1b4\n",
  "reactions": {
    "url": "https://api.github.com/repos/eonist/claude-talk-to-figma-mcp/issues/comments/2859545793/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "performed_via_github_app": null
}
